// !!! This content is generated by the multiplayer backend tool. Do not modify manually !!!
// !!! Last Updated (DD/MM/YYYY HH:MM:SS CET): 16/09/2024 00:16:38 CEST !!!

export enum OriginType {
	Server = "server",
	Owner = "owner",
	Guest = "guest"
};

export type SendPermissions = { [key in OriginType]: boolean };

export type MessageElementDescriptor = {
	byteSize: number,
	offset: number,
	description: string,
	type: string
};

export type EventSpecification = {
	id: number,
	name: string,
	permissions: SendPermissions,
	expectedMinSize: number
	structure: MessageElementDescriptor[]
};

/** DebugInfo Message Structure
 *
 * *	0b --> 4b:	uint32    :	HTTP Code (if applicable)
 * *	4b --> +Nb:	string    :	Debug message
 */
export const DEBUG_INFO_EVENT: EventSpecification = {
	id: 0,
	name: "DebugInfo",
	permissions: {guest: true, owner: true, server: true},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "HTTP Code (if applicable)",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 4,
			description: "Debug message",
			type: "string"
		}
	]
}
/** PlayerJoined Message Structure
 *
 * *	0b --> 4b:	uint32    :	Player ID
 * *	4b --> +Nb:	string    :	Player IGN
 */
export const PLAYER_JOINED_EVENT: EventSpecification = {
	id: 1,
	name: "PlayerJoined",
	permissions: {guest: false, owner: false, server: true},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Player ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 4,
			description: "Player IGN",
			type: "string"
		}
	]
}
/** PlayerJoinAttempt Message Structure
 *
 * *	0b --> 4b:	uint32    :	Player ID
 * *	4b --> +Nb:	string    :	Player IGN
 */
export const PLAYER_JOIN_ATTEMPT_EVENT: EventSpecification = {
	id: 2,
	name: "PlayerJoinAttempt",
	permissions: {guest: false, owner: false, server: true},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Player ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 4,
			description: "Player IGN",
			type: "string"
		}
	]
}
/** PlayerJoinAccepted Message Structure
 *
 * *	0b --> 4b:	uint32    :	Player ID
 * *	4b --> +Nb:	string    :	Player IGN
 */
export const PLAYER_JOIN_ACCEPTED_EVENT: EventSpecification = {
	id: 3,
	name: "PlayerJoinAccepted",
	permissions: {guest: false, owner: true, server: false},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Player ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 4,
			description: "Player IGN",
			type: "string"
		}
	]
}
/** PlayerJoinDeclined Message Structure
 *
 * *	0b --> 4b:	uint32    :	Player ID
 * *	4b --> +Nb:	string    :	Player IGN
 */
export const PLAYER_JOIN_DECLINED_EVENT: EventSpecification = {
	id: 4,
	name: "PlayerJoinDeclined",
	permissions: {guest: false, owner: true, server: false},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Player ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 4,
			description: "Player IGN",
			type: "string"
		}
	]
}
/** PlayerLeft Message Structure
 *
 * *	0b --> 4b:	uint32    :	Player ID
 * *	4b --> +Nb:	string    :	Player IGN
 */
export const PLAYER_LEFT_EVENT: EventSpecification = {
	id: 5,
	name: "PlayerLeft",
	permissions: {owner: false, server: true, guest: false},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Player ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 4,
			description: "Player IGN",
			type: "string"
		}
	]
}
/** LobbyClosing Message Structure
 *
 */
export const LOBBY_CLOSING_EVENT: EventSpecification = {
	id: 6,
	name: "LobbyClosing",
	permissions: {guest: false, owner: false, server: true},
	expectedMinSize: 8,
	structure: [
	]
}
/** PlayerLeaving Message Structure
 *
 * *	0b --> 4b:	uint32    :	Player ID
 * *	4b --> +Nb:	string    :	Player IGN
 */
export const PLAYER_LEAVING_EVENT: EventSpecification = {
	id: 7,
	name: "PlayerLeaving",
	permissions: {guest: true, owner: true, server: false},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Player ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 4,
			description: "Player IGN",
			type: "string"
		}
	]
}
/** ServerClosing Message Structure
 *
 */
export const SERVER_CLOSING_EVENT: EventSpecification = {
	id: 8,
	name: "ServerClosing",
	permissions: {guest: false, owner: false, server: true},
	expectedMinSize: 8,
	structure: [
	]
}
/** EnterLocation Message Structure
 *
 * *	0b --> 4b:	uint32    :	Location ID
 */
export const ENTER_LOCATION_EVENT: EventSpecification = {
	id: 1001,
	name: "EnterLocation",
	permissions: {server: false, guest: false, owner: true},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Location ID",
			type: "uint32"
		}
	]
}
/** PlayerMove Message Structure
 *
 * *	0b --> 4b:	uint32    :	Player ID
 * *	4b --> 8b:	uint32    :	Location ID
 */
export const PLAYER_MOVE_EVENT: EventSpecification = {
	id: 1002,
	name: "PlayerMove",
	permissions: {guest: true, owner: true, server: false},
	expectedMinSize: 16,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Player ID",
			type: "uint32"
		},
		{
			byteSize: 4,
			offset: 4,
			description: "Location ID",
			type: "uint32"
		}
	]
}
/** DifficultySelectForMinigame Message Structure
 *
 * *	0b --> 4b:	uint32    :	Minigame ID
 * *	4b --> 8b:	uint32    :	Difficulty ID
 * *	8b --> +Nb:	string    :	Difficulty Name
 */
export const DIFFICULTY_SELECT_FOR_MINIGAME_EVENT: EventSpecification = {
	id: 2000,
	name: "DifficultySelectForMinigame",
	permissions: {owner: true, server: false, guest: false},
	expectedMinSize: 16,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Minigame ID",
			type: "uint32"
		},
		{
			byteSize: 4,
			offset: 4,
			description: "Difficulty ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 8,
			description: "Difficulty Name",
			type: "string"
		}
	]
}
/** DifficultyConfirmedForMinigame Message Structure
 *
 * *	0b --> 4b:	uint32    :	Minigame ID
 * *	4b --> 8b:	uint32    :	Difficulty ID
 * *	8b --> +Nb:	string    :	Difficulty Name
 */
export const DIFFICULTY_CONFIRMED_FOR_MINIGAME_EVENT: EventSpecification = {
	id: 2001,
	name: "DifficultyConfirmedForMinigame",
	permissions: {guest: false, owner: true, server: false},
	expectedMinSize: 16,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Minigame ID",
			type: "uint32"
		},
		{
			byteSize: 4,
			offset: 4,
			description: "Difficulty ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 8,
			description: "Difficulty Name",
			type: "string"
		}
	]
}
/** PlayersDeclareIntentForMinigame Message Structure
 *
 */
export const PLAYERS_DECLARE_INTENT_FOR_MINIGAME_EVENT: EventSpecification = {
	id: 2002,
	name: "PlayersDeclareIntentForMinigame",
	permissions: {guest: false, owner: false, server: true},
	expectedMinSize: 8,
	structure: [
	]
}
/** PlayerReadyForMinigame Message Structure
 *
 * *	0b --> 4b:	uint32    :	Player ID
 * *	4b --> +Nb:	string    :	Player IGN
 */
export const PLAYER_READY_FOR_MINIGAME_EVENT: EventSpecification = {
	id: 2003,
	name: "PlayerReadyForMinigame",
	permissions: {guest: true, owner: true, server: false},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Player ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 4,
			description: "Player IGN",
			type: "string"
		}
	]
}
/** PlayerAbortingMinigame Message Structure
 *
 * *	0b --> 4b:	uint32    :	Player ID
 * *	4b --> +Nb:	string    :	Player IGN
 */
export const PLAYER_ABORTING_MINIGAME_EVENT: EventSpecification = {
	id: 2004,
	name: "PlayerAbortingMinigame",
	permissions: {owner: true, server: false, guest: true},
	expectedMinSize: 12,
	structure: [
		{
			byteSize: 4,
			offset: 0,
			description: "Player ID",
			type: "uint32"
		},
		{
			byteSize: 0,
			offset: 4,
			description: "Player IGN",
			type: "string"
		}
	]
}
/** EnterMinigame Message Structure
 *
 */
export const ENTER_MINIGAME_EVENT: EventSpecification = {
	id: 2005,
	name: "EnterMinigame",
	permissions: {guest: false, owner: false, server: true},
	expectedMinSize: 8,
	structure: [
	]
}

export const ALL_EVENTS: {[key: number]: EventSpecification} = {
	0: DEBUG_INFO_EVENT,
	1: PLAYER_JOINED_EVENT,
	2: PLAYER_JOIN_ATTEMPT_EVENT,
	3: PLAYER_JOIN_ACCEPTED_EVENT,
	4: PLAYER_JOIN_DECLINED_EVENT,
	5: PLAYER_LEFT_EVENT,
	6: LOBBY_CLOSING_EVENT,
	7: PLAYER_LEAVING_EVENT,
	8: SERVER_CLOSING_EVENT,
	1001: ENTER_LOCATION_EVENT,
	1002: PLAYER_MOVE_EVENT,
	2000: DIFFICULTY_SELECT_FOR_MINIGAME_EVENT,
	2001: DIFFICULTY_CONFIRMED_FOR_MINIGAME_EVENT,
	2002: PLAYERS_DECLARE_INTENT_FOR_MINIGAME_EVENT,
	2003: PLAYER_READY_FOR_MINIGAME_EVENT,
	2004: PLAYER_ABORTING_MINIGAME_EVENT,
	2005: ENTER_MINIGAME_EVENT
};
